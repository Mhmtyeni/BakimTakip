#pragma checksum "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\Equipment\AddEquipment.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0976699482d10c4be8a46cf6654bcf77ec8a8516"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Equipment_AddEquipment), @"mvc.1.0.view", @"/Views/Equipment/AddEquipment.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Concrete;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.AppUserDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.CompleteMaintenanceEquipmentDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.CompleteMaintenanceRobotDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.EquipmentCategoryDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.EquipmentDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.EquipmentMaintenanceDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.EquipmentMaintenanceUserDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.FactoryDepartmentDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.FactoryDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.ProjectDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.ProjectEquipmentDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.ProjectResponsibleDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.ProjectRobotDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.RobotCategoryDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.RobotDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.RobotMaintenanceDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.RobotToBeMaintainedDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.RobotToBeMaintainedUserDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.FaultReportDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.ProjectReportDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using RobotMaintenanceMvc.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0976699482d10c4be8a46cf6654bcf77ec8a8516", @"/Views/Equipment/AddEquipment.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"82c112082cfbb1c52093a18ca25afab572666c79", @"/Views/_ViewImports.cshtml")]
    public class Views_Equipment_AddEquipment : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("form_add"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("form_edit"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Edit", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Equipment", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""main"">
    <!-- MAIN CONTENT -->
    <div class=""main-content"">
        <div class=""container-fluid"">
            <h2 class=""page-title"" style=""text-align:center""><strong>EKİPMAN EKLE/DÜZENLE</strong></h2>
            <div class=""row"">
                <div class=""col-md-12"">
                    <div class=""panel"">
                        <div class=""panel-body"">
                            <div class=""panel-heading"">
                                <h3 class=""panel-title"" style=""text-align:center""><strong>Ekipman Bilgileri</strong></h3>
                            </div>
                            <br />
                            <div class=""row"">
                                <div class=""col-md-12"">
");
            WriteLiteral("                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0976699482d10c4be8a46cf6654bcf77ec8a851610181", async() => {
                WriteLiteral(@"
                                        <div class=""col-md-5"">
                                            <h3 class=""panel-title"" style=""text-align:center""><strong>Ekipman Ekle</strong></h3>
                                            <br />
                                            <label>Kategori Seç</label>
                                            <div id=""categoryDiv"">
                                                <select name=""select"" id=""equipmentCategory"" class=""form-control"" required>
                                                </select>
                                            </div>
                                            <br />
                                            <label>Alt Kategori Seç</label>
                                            <div id=""subCategoryDiv"">
                                                <select name=""select"" id=""equipmentSubCategory"" class=""form-control"" required>
                                                </select>
            ");
                WriteLiteral(@"                                </div>
                                            <br />
                                            <label>Ekipman İsmi</label>
                                            <input type=""text"" id=""equipmentNameAdd"" class=""form-control"" placeholder=""Ekipman İsmi"" required>
                                            <br />
                                            <label>Bakım Periodu <span style=""color:crimson;"">(Gün olarak giriniz)</span></label>
                                            <input type=""text"" id=""maintenancePeriodAdd"" onkeypress=""return isNumberKey(event)"" class=""form-control"" placeholder=""Bakım Periodu"" required>
                                            <br />
                                            <label>Bakım İsmi</label>
                                            <input type=""text"" id=""maintenanceNameAdd"" class=""form-control"" placeholder=""Bakım İsmi"" required>
                                            <br />
                         ");
                WriteLiteral(@"                   <label>Bakım Açıklaması</label>
                                            <textarea style=""height:100px"" type=""text"" id=""maintenanceCommentAdd"" class=""form-control"" placeholder=""Açıklama"" required></textarea>
                                            <br />
                                            <button id=""add"" onclick=""postDataAdd()"" style=""border-radius:10px;"" type=""button"" class=""btn btn-success btn-block"">EKLE</button>
                                            <br />
                                            <br />
                                        </div>
                                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            WriteLiteral(@"                                    <div class=""col-md-2"">
                                        <center>
                                            <br />
                                            <br />
                                            <br />
                                            <button style=""margin-top: 0px; border-radius: 10px; width: 156.2px;"" type=""button"" onclick=""addEquipmentCategory()"" class=""btn btn-default""><i class=""fa fa-plus-square""></i> Kategori Ekle </button>
                                            <br />
                                            <br />
                                            <br />
                                            <button style=""margin-top: 5px; border-radius: 10px; width: 156.2px;"" onclick=""addEquipmentSubCategory()"" type=""button"" class=""btn btn-default""><i class=""fa fa-plus-square""></i> Alt Kategori Ekle </button>
                                            <br />
                                            <br />
   ");
            WriteLiteral("                                         <br />\r\n                                        </center>\r\n                                    </div>\r\n");
            WriteLiteral("\r\n                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0976699482d10c4be8a46cf6654bcf77ec8a851615661", async() => {
                WriteLiteral(@"
                                        <div class=""col-md-5"">
                                            <h3 class=""panel-title"" style=""text-align:center""><strong>Ekipman Düzenle</strong></h3>
                                            <br />
                                            <label>Kategori Seç</label>
                                            <div id=""categoryDiv2"">
                                                <select name=""select"" id=""equipmentCategory2"" class=""form-control"" required>
                                                </select>
                                            </div>
                                            <br />
                                            <label>Alt Kategori Seç</label>
                                            <div id=""subCategoryDiv2"">
                                                <select name=""select"" id=""equipmentSubCategory2"" class=""form-control"" required>
                                                </select>
     ");
                WriteLiteral(@"                                       </div>
                                            <br />
                                            <label>Ekipman Seç</label>
                                            <div id=""equipmentDiv2"">
                                                <select name=""select"" id=""equipment2"" class=""form-control"" required>
                                                </select>
                                            </div>
                                            <br />
                                            <label>Ekipman İsmi</label>
                                            <input type=""text"" id=""equipmentNameEdit"" class=""form-control"" placeholder=""Ekipman İsmi"" required>
                                            <br />
                                            <label>Bakım Periodu <span style=""color:crimson;"">(Gün olarak giriniz)</span></label>
                                            <input type=""text"" id=""maintenancePeriodEdit"" onkeypress=");
                WriteLiteral("\"return isNumberKey(event)\" class=\"form-control\" placeholder=\"Bakım Periodu\" required");
                BeginWriteAttribute("value", " value=\"", 7380, "\"", 7388, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                            <br />
                                            <label>Bakım İsmi</label>
                                            <input type=""text"" id=""maintenanceNameEdit"" class=""form-control"" placeholder=""Bakım İsmi"" required>
                                            <br />
                                            <label>Bakım Açıklaması</label>
                                            <textarea style=""height:100px"" type=""text"" id=""maintenanceCommentEdit"" class=""form-control"" placeholder=""Açıklama"" required></textarea>
                                            <br />
                                            <button id=""edit"" onclick=""postDataEdit()"" style=""border-radius:10px;"" type=""submit"" class=""btn btn-primary btn-block"">KAYDET</button>
                                            <br />
                                            <br />
                                        </div>
                                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                </div>\r\n                            </div>\r\n");
            WriteLiteral(@"                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
    var equipmentId, createdDate, createName;
    $(document).ready(function () {
        getEquipmentCategories();
        getEquipmentCategories2();

        $('#equipmentCategory').on(""change"", function () {
            getEquipmentSubCategories();
        })

        $('#equipmentCategory2').on(""change"", function () {
            getEquipmentSubCategories2();
        })

        $('#equipmentSubCategory2').on(""change"", function () {
            getEquipments2();
        })

        $('#equipment2').on(""change"", function () {
            getEquipmentInfo();
        })
    });

    // ===============================
    // ");
            WriteLiteral(@"EquipmentCategory
    // ===============================
    function addEquipmentCategory() {
        var name = '';
        Swal.fire({
            title: 'Kategori adını giriniz!',
            input: 'text',
            inputAttributes: {
                autocapitalize: 'off'
            },
            showCancelButton: true,
            cancelButtonText: 'Vazgeç',
            confirmButtonText: 'Ekle',
            showLoaderOnConfirm: true,
            preConfirm: (login) => {
                if (login != '') {
                    name = login;
                }
                else {
                    Swal.showValidationMessage(
                        `İsim alanı boş bırakılamaz!`
                    )
                }
            },
            allowOutsideClick: () => !Swal.isLoading()
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/EquipmentCategory/Add/',
                    type: 'POST',
       ");
            WriteLiteral(@"             dataType: 'json',
                    data: {
                        'Name': name,
                        'SubId': 0,
                    },
                    success: function (data) {
                        Swal.fire({
                            position: 'center',
                            icon: 'success',
                            title: 'Başarıyla eklenmiştir!',
                            showConfirmButton: false,
                            timer: 800
                        }).then(() => {
                            $(""#categoryDiv"").load(getEquipmentCategories());
                            $(""#categoryDiv2"").load(getEquipmentCategories2());
                        })
                    },
                    error: function (data) {
                    }
                });
            }
        })
    }
    // ===============================
    function getEquipmentCategories() {

            $.ajax({
                type: ""GET"",
              ");
            WriteLiteral(@"  url: ""/EquipmentCategory/GetBySubId?subId="" + 0,
                data: ""{}"",
                success: function (data) {
                    var s = '';
                    for (var i = 0; i < data.equipmentCategories.$values.length; i++) {
                        s += '<option value=""' + data.equipmentCategories.$values[i].id + '"">' + data.equipmentCategories.$values[i].name + '</option>';
                    }
                    $(""#equipmentCategory"").html(s);
                    getEquipmentSubCategories();
                }
            });
    }
    // ===============================
    function getEquipmentCategories2() {

        $.ajax({
            type: ""GET"",
            url: ""/EquipmentCategory/GetBySubId?subId="" + 0,
            data: ""{}"",
            success: function (data) {
                var s = '';
                for (var i = 0; i < data.equipmentCategories.$values.length; i++) {
                    s += '<option value=""' + data.equipmentCategories.$values[i].id ");
            WriteLiteral(@"+ '"">' + data.equipmentCategories.$values[i].name + '</option>';
                }
                $(""#equipmentCategory2"").html(s);
                getEquipmentSubCategories2();
            }
        });
    }

    // ===============================
    // EquipmentSubCategory
    // ===============================
    function addEquipmentSubCategory() {
        var name = '';
        Swal.fire({
            title: 'Alt Kategori adını giriniz!',
            input: 'text',
            inputAttributes: {
                autocapitalize: 'off'
            },
            showCancelButton: true,
            cancelButtonText: 'Vazgeç',
            confirmButtonText: 'Ekle',
            showLoaderOnConfirm: true,
            preConfirm: (login) => {
                if (login != '') {
                    name = login;
                }
                else {
                    Swal.showValidationMessage(
                        `İsim alanı boş bırakılamaz!`
                    )
     ");
            WriteLiteral(@"           }
            },
            allowOutsideClick: () => !Swal.isLoading()
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/EquipmentCategory/Add/',
                    type: 'POST',
                    dataType: 'json',
                    data: {
                        'Name': name,
                        'SubId': $(""#equipmentCategory"").val(),
                    },
                    success: function (data) {
                        Swal.fire({
                            position: 'center',
                            icon: 'success',
                            title: 'Başarıyla eklenmiştir!',
                            showConfirmButton: false,
                            timer: 800
                        }).then(() => {
                            $(""#subCategoryDiv"").load(getEquipmentSubCategories());
                            $(""#subCategoryDiv2"").load(getEquipmentSubCategories2());
        ");
            WriteLiteral(@"                })
                    },
                    error: function (data) {
                    }
                });
            }
        })
    }
    // ===============================
    function getEquipmentSubCategories() {
        $.ajax({
            type: ""GET"",
            url: ""/EquipmentCategory/GetBySubId?subId="" + $(""#equipmentCategory"").val(),
            success: function (data) {
                $('#equipmentSubCategory').empty();
                for (var i = 0; i < data.equipmentCategories.$values.length; i++) {
                    var select = document.getElementById(""equipmentSubCategory"");
                    select.appendChild(new Option(data.equipmentCategories.$values[i].name, data.equipmentCategories.$values[i].id));
                }
                //getEquipments();
            }
        });
    }
    // ===============================
    function getEquipmentSubCategories2() {
        $.ajax({
            type: ""GET"",
            url: ""/Equi");
            WriteLiteral(@"pmentCategory/GetBySubId?subId="" + $(""#equipmentCategory2"").val(),
            success: function (data) {
                $('#equipmentSubCategory2').empty();
                for (var i = 0; i < data.equipmentCategories.$values.length; i++) {
                    var select = document.getElementById(""equipmentSubCategory2"");
                    select.appendChild(new Option(data.equipmentCategories.$values[i].name, data.equipmentCategories.$values[i].id));
                }
                getEquipments2();
            }
        });
    }

    // ===============================
    // Equipment
    // ===============================
    //function getEquipments() {
    //    $.ajax({
    //        type: ""GET"",
    //        url: ""/Equipment/GetByEquimentCategoryId?equimentCategoryId="" + $(""#equipmentSubCategory"").val(),
    //        success: function (data) {
    //            $('#equipment').empty();
    //            for (var i = 0; i < data.equipment.$values.length; i++) {
    //     ");
            WriteLiteral(@"           var select = document.getElementById(""equipment"");
    //                select.appendChild(new Option(data.equipment.$values[i].name, data.equipment.$values[i].id));
    //            }
    //        }
    //    });
    //}
    // ===============================
    function getEquipmentInfo() {
        $.ajax({
            type: ""GET"",
            url: ""/Equipment/GetById?equipmentId="" + $(""#equipment2"").val(),
            success: function (data) {
                console.log(data);
                if (data==null) {
                    $('#maintenancePeriodEdit').val("""");
                    $('#maintenanceNameEdit').val("""");
                    $('#maintenanceCommentEdit').val("""");
                    $('#equipmentNameEdit').val("""");
                }
                else {
                    $('#maintenancePeriodEdit').val(data.equipment.period);
                    $('#maintenanceNameEdit').val(data.equipment.maintenanceName);
                    $('#maintenanceCommentE");
            WriteLiteral(@"dit').val(data.equipment.maintenanceComment);
                    $('#equipmentNameEdit').val(data.equipment.name);
                    equipmentId = data.equipment.id;
                    createdDate = data.equipment.createdDate;
                    createdName = data.equipment.createName;
                }
                
            }
        });
    }
    // ===============================
    function getEquipments2() {
        $.ajax({
            type: ""GET"",
            url: ""/Equipment/GetByEquimentCategoryId?equimentCategoryId="" + $(""#equipmentSubCategory2"").val(),
            success: function (data) {
                $('#equipment2').empty();
                for (var i = 0; i < data.equipments.$values.length; i++) {
                    var select = document.getElementById(""equipment2"");
                    select.appendChild(new Option(data.equipments.$values[i].name, data.equipments.$values[i].id));
                }
                getEquipmentInfo();
            }
      ");
            WriteLiteral("  });\r\n    }\r\n    // ===============================\r\n\r\n    function postDataAdd() {\r\n        if (document.forms[\'form_add\'].reportValidity()) {\r\n            document.getElementById(\"add\").disabled = true;\r\n            $.ajax({\r\n                url: \'");
#nullable restore
#line 390 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\Equipment\AddEquipment.cshtml"
                 Write(Url.Action("Add", "Equipment"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                type: 'POST',
                dataType: 'json',
                data: {
                    'Name': $(""#equipmentNameAdd"").val(),
                    'Period': $(""#maintenancePeriodAdd"").val(),
                    'MaintenanceName': $(""#maintenanceNameAdd"").val(),
                    'MaintenanceComment': $(""#maintenanceCommentAdd"").val(),
                    'EquipmentCategoryId': $(""#equipmentSubCategory"").val(),
                },
                success: function (data) {
                    if (data == true) {
                        Swal.fire({
                            position: 'center',
                            icon: 'success',
                            title: 'Başarıyla eklenmiştir!',
                            showConfirmButton: false,
                            timer: 800
                        }).then(() => {
                            location.reload();
                        })
                    }
                    else {
               ");
            WriteLiteral(@"         Swal.fire({
                            position: 'center',
                            icon: 'error',
                            title: 'Bu ekipman daha önce eklenmiştir.',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            location.reload();
                        })
                    }
                },
                error: function (data) {
                }
            });
        }
    }

     function postDataEdit() {
         if (document.forms['form_edit'].reportValidity()) {
             document.getElementById(""edit"").disabled = true;
            $.ajax({
                url: '/Equipment/Edit/',
                type: 'POST',
                dataType: 'json',
                data: {
                    'Name': $(""#equipmentNameEdit"").val(),
                    'Period': $(""#maintenancePeriodEdit"").val(),
                    'MaintenanceName': $(""#m");
            WriteLiteral(@"aintenanceNameEdit"").val(),
                    'MaintenanceComment': $(""#maintenanceCommentEdit"").val(),
                    'EquipmentCategoryId': $(""#equipmentSubCategory2"").val(),
                    'Id': equipmentId,
                    'CreatedDate': createdDate,
                    'CreatedName': createdName,

                },
                success: function (data) {
                    if (data == true) {
                        Swal.fire({
                            position: 'center',
                            icon: 'success',
                            title: 'Başarıyla güncellenmiştir!',
                            showConfirmButton: false,
                            timer: 800
                        }).then(() => {
                            location.reload();
                        })
                    }
                    else {
                        Swal.fire({
                            position: 'center',
                            icon: 'error',
 ");
            WriteLiteral(@"                           title: 'Aynı isimde bir ekipman mevcut!',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            location.reload();
                        })
                    }
                },
                error: function (data) {
                }
            });
        }
    }



</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
