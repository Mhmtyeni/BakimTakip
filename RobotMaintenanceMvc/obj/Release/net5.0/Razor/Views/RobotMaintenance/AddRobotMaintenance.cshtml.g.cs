#pragma checksum "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\RobotMaintenance\AddRobotMaintenance.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1f09e0e616227987fa377b2feb6b4331fa77e319"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_RobotMaintenance_AddRobotMaintenance), @"mvc.1.0.view", @"/Views/RobotMaintenance/AddRobotMaintenance.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Concrete;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.AppUserDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.CompleteMaintenanceEquipmentDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.CompleteMaintenanceRobotDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.EquipmentCategoryDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.EquipmentDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.EquipmentMaintenanceDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.EquipmentMaintenanceUserDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.FactoryDepartmentDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.FactoryDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.ProjectDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.ProjectEquipmentDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.ProjectResponsibleDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.ProjectRobotDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.RobotCategoryDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.RobotDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.RobotMaintenanceDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.RobotToBeMaintainedDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.RobotToBeMaintainedUserDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.FaultReportDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using EntityLayer.Dtos.ProjectReportDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\_ViewImports.cshtml"
using RobotMaintenanceMvc.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1f09e0e616227987fa377b2feb6b4331fa77e319", @"/Views/RobotMaintenance/AddRobotMaintenance.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"82c112082cfbb1c52093a18ca25afab572666c79", @"/Views/_ViewImports.cshtml")]
    public class Views_RobotMaintenance_AddRobotMaintenance : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("form_add"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("form_edit"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""main"">
    <!-- MAIN CONTENT -->
    <div class=""main-content"">
        <div class=""container-fluid"">
            <h2 class=""page-title"" style=""text-align:center""><strong>ROBOTA BAKIM EKLE/DÜZENLE</strong></h2>
            <div class=""row"">
                <div class=""col-md-12"">
                    <div class=""panel"">
                        <div class=""panel-body"">
                            <div class=""panel-heading"">
                                <h3 class=""panel-title"" style=""text-align:center""><strong>Robot Bakım Bilgileri</strong></h3>
                            </div>
                            <br />
                            <div class=""row"">
                                <div class=""col-md-12"">
");
            WriteLiteral("                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1f09e0e616227987fa377b2feb6b4331fa77e3199358", async() => {
                WriteLiteral(@"
                                        <div class=""col-md-5"">
                                            <h3 class=""panel-title"" style=""text-align:center""><strong>Bakım Ekle</strong></h3>
                                            <br />
                                            <label>Kategori Seç</label>
                                            <div id=""categoryDiv"">
                                                <select name=""select"" id=""robotCategory"" class=""form-control"" required>
                                                </select>
                                            </div>
                                            <br />
                                            <label>Robot Seç</label>
                                            <div id=""robotDiv"">
                                                <select name=""select"" id=""robot"" class=""form-control"" required>
                                                </select>
                                            </");
                WriteLiteral(@"div>
                                            <br />
                                            <label>Bakım Seç</label>
                                            <div id=""maintenanceDiv"">
                                                <select name=""select"" id=""maintenance"" class=""form-control"" required>
                                                </select>
                                            </div>
                                            <br />
                                            <button id=""add"" onclick=""postDataAdd()"" style=""border-radius:10px;"" type=""button"" class=""btn btn-success btn-block"">EKLE</button>
                                            <br />
                                            <br />
                                        </div>
                                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            WriteLiteral(@"                                    <div class=""col-md-2"">
                                        <center>
                                            <br />
                                            <br />
                                            <br />
                                            <button style=""margin-top: 0px; border-radius: 10px; width: 156.2px;"" type=""button"" onclick=""addRobotCategory()"" class=""btn btn-default""><i class=""fa fa-plus-square""></i> Kategori Ekle </button>
                                            <br />
                                            <br />
                                            <br />
                                            <button style=""margin-top: 5px; border-radius: 10px; width: 156.2px;"" onclick=""addRobot()"" type=""button"" class=""btn btn-default""><i class=""fa fa-plus-square""></i> Robot Ekle </button>
                                            <br />
                                            <br />
                             ");
            WriteLiteral(@"               <br />
                                            <button style=""margin-top: 5px; border-radius: 10px; width: 156.2px;"" onclick=""addMaintenance()"" type=""button"" class=""btn btn-default""><i class=""fa fa-plus-square""></i> Bakım Ekle </button>
                                        </center>
                                    </div>
");
            WriteLiteral("\r\n                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1f09e0e616227987fa377b2feb6b4331fa77e31914158", async() => {
                WriteLiteral(@"
                                        <div class=""col-md-5"">
                                            <h3 class=""panel-title"" style=""text-align:center""><strong>Bakım Kaldır</strong></h3>
                                            <br />
                                            <label>Kategori Seç</label>
                                            <div id=""categoryDiv2"">
                                                <select name=""select"" id=""robotCategory2"" class=""form-control"" required>
                                                </select>
                                            </div>
                                            <br />
                                            <label>Robot Seç</label>
                                            <div id=""robotDiv2"">
                                                <select name=""select"" id=""robot2"" class=""form-control"" required>
                                                </select>
                                        ");
                WriteLiteral(@"    </div>
                                            <br />
                                            <label>Bakım Seç</label>
                                            <div id=""maintenanceDiv2"">
                                                <select name=""select"" id=""maintenance2"" class=""form-control"" required>
                                                </select>
                                            </div>
                                            <br />
");
                WriteLiteral(@"                                            <a style=""color:white; border-radius:10px;"" onclick=""postDataEdit()"" class=""btn btn-block btn-danger"">
                                                &nbsp; Sil
                                            </a>
                                            <br />
                                            <br />
                                        </div>
                                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
    var maintenanceId,maintenanceName;
    $(document).ready(function () {
        getRobotCategories();
        getRobotCategories2();
        getMaintenances();

        $('#robotCategory').on(""change"", function () {
            getRobots();
        })
        $('#robotCategory2').on(""change"", function () {
            getRobots2();

        })
        $('#robot2').on(""change"", function () {
            getMaintenances2();
        })

        //$('#getMaintenances2').on(""change"", function () {
        //    getDeneme();
        //})
    });

    //");
            WriteLiteral(@" ===============================
    // RobotCategory
    // ===============================
    function addRobotCategory() {
        var name = '';
        Swal.fire({
            title: 'Kategori adını giriniz!',
            input: 'text',
            inputAttributes: {
                autocapitalize: 'off'
            },
            showCancelButton: true,
            cancelButtonText: 'Vazgeç',
            confirmButtonText: 'Ekle',
            showLoaderOnConfirm: true,
            preConfirm: (login) => {
                if (login != '') {
                    name = login;
                }
                else {
                    Swal.showValidationMessage(
                        `İsim alanı boş bırakılamaz!`
                    )
                }
            },
            allowOutsideClick: () => !Swal.isLoading()
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/RobotCategory/Add/',
             ");
            WriteLiteral(@"       type: 'POST',
                    dataType: 'json',
                    data: {
                        'Name': name,
                    },
                    success: function (data) {
                        Swal.fire({
                            position: 'center',
                            icon: 'success',
                            title: 'Başarıyla eklenmiştir!',
                            showConfirmButton: false,
                            timer: 800
                        }).then(() => {
                            $(""#categoryDiv"").load(getRobotCategories());
                            $(""#categoryDiv2"").load(getRobotCategories2());
                        })
                    },
                    error: function (data) {
                    }
                });
            }
        })
    }
    // ===============================
    function getRobotCategories() {
        $.ajax({
            type: ""GET"",
            url: ""/RobotCategory/GetAll"",
 ");
            WriteLiteral(@"           data: ""{}"",
            success: function (data) {
                var s = '';
                for (var i = 0; i < data.robotCategories.$values.length; i++) {
                    s += '<option value=""' + data.robotCategories.$values[i].id + '"">' + data.robotCategories.$values[i].name + '</option>';
                }
                $(""#robotCategory"").html(s);
                getRobots();
            }
        });
    }
    // ===============================
    function getRobotCategories2() {
        $.ajax({
            type: ""GET"",
            url: ""/RobotCategory/GetAll"",
            data: ""{}"",
            success: function (data) {
                var s = '';
                for (var i = 0; i < data.robotCategories.$values.length; i++) {
                    s += '<option value=""' + data.robotCategories.$values[i].id + '"">' + data.robotCategories.$values[i].name + '</option>';
                }
                $(""#robotCategory2"").html(s);
                getRobots2();");
            WriteLiteral(@"
            }
        });
    }

    // ===============================
    // Robots
    // ===============================
    function addRobot() {
        var name = '';
        Swal.fire({
            title: 'Kategori adını giriniz!',
            input: 'text',
            inputAttributes: {
                autocapitalize: 'off'
            },
            showCancelButton: true,
            cancelButtonText: 'Vazgeç',
            confirmButtonText: 'Ekle',
            showLoaderOnConfirm: true,
            preConfirm: (login) => {
                if (login != '') {
                    name = login;
                }
                else {
                    Swal.showValidationMessage(
                        `İsim alanı boş bırakılamaz!`
                    )
                }
            },
            allowOutsideClick: () => !Swal.isLoading()
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/Robot/");
            WriteLiteral(@"Add/',
                    type: 'POST',
                    dataType: 'json',
                    data: {
                        'Name': name,
                        'RobotCategoryId': $(""#robotCategory"").val(),
                    },
                    success: function (data) {
                        Swal.fire({
                            position: 'center',
                            icon: 'success',
                            title: 'Başarıyla eklenmiştir!',
                            showConfirmButton: false,
                            timer: 800
                        }).then(() => {
                            $(""#categoryDiv"").load(getRobotCategories());
                            $(""#categoryDiv2"").load(getRobotCategories2());
                        })
                    },
                    error: function (data) {
                    }
                });
            }
        })
    }
    // ===============================
    function getRobots() {
     ");
            WriteLiteral(@"   $.ajax({
            type: ""GET"",
            url: ""/Robot/GetByRobotCategoryId?robotCategoryId="" + $(""#robotCategory"").val(),
            success: function (data) {
                $('#robot').empty();
                for (var i = 0; i < data.robots.$values.length; i++) {
                    var select = document.getElementById(""robot"");
                    select.appendChild(new Option(data.robots.$values[i].name, data.robots.$values[i].id));
                }
            }
        });
    }
    // ===============================
    function getRobots2() {
        $.ajax({
            type: ""GET"",
            url: ""/Robot/GetByRobotCategoryId?robotCategoryId="" + $(""#robotCategory2"").val(),
            success: function (data) {
                $('#robot2').empty();
                for (var i = 0; i < data.robots.$values.length; i++) {
                    var select = document.getElementById(""robot2"");
                    select.appendChild(new Option(data.robots.$values[i].name, dat");
            WriteLiteral(@"a.robots.$values[i].id));
                }
                getMaintenances2();
            }
        });
    }
    // ===============================

    // ===============================
    // Maintenances
    // ===============================
    // ===============================
    function getMaintenances() {
        $.ajax({
            type: ""GET"",
            url: ""/Maintenance/GetAll"",
            success: function (data) {
                $('#maintenance').empty();
                for (var i = 0; i < data.maintenances.$values.length; i++) {
                    var select = document.getElementById(""maintenance"");
                    select.appendChild(new Option(data.maintenances.$values[i].name, data.maintenances.$values[i].id));
                }
            }
        });
    }
    // ===============================
    function getMaintenances2() {
        $.ajax({
            type: ""GET"",
            url: ""/RobotMaintenance/GetByRobotId?robotId="" + $(""#robot2"").");
            WriteLiteral(@"val(),
            success: function (data) {
                $('#maintenance2').empty();
                for (var i = 0; i < data.length; i++) {
                    var select = document.getElementById(""maintenance2"");
                    var start = data[i].indexOf(""?"");
                    var end = data[i].length;
                    maintenanceId = data[i].substring(start+1,end);
                    maintenanceName = data[i].substring(0,start);
                    select.appendChild(new Option(maintenanceName, maintenanceId));
                }
            }
        });
    }

    // ===============================

    function addMaintenance() {
        Swal.fire({
            title: 'Bakım Ekleme',
            html:
                '<input type=""text"" style=""width:230px;"" id=""swal-input1"" class=""swal2-input"" placeholder=""Bakım İsmi"" autocomplete=""off"">' +
                '<input type=""text"" style=""width:230px;"" id=""swal-input2"" class=""swal2-input"" onkeypress=""return isNumberKey(e");
            WriteLiteral(@"vent)"" placeholder=""Bakım Periodu(Gün olarak giriniz.)"" autocomplete=""off"">' +
                '<input type=""text"" style=""width:230px;"" id=""swal-input3"" class=""swal2-input"" placeholder=""Bakım Açıklaması"" autocomplete=""off"">',
            showCancelButton: true,
            cancelButtonText: 'Vazgeç',
            confirmButtonText: 'Onayla',
            showLoaderOnConfirm: true,
            preConfirm: (login) => {
                var Name = $('#swal-input1').val();
                var Period = $('#swal-input2').val();
                var MaintenanceComment = $('#swal-input3').val();
                if (Name != '' && Period != '' && MaintenanceComment != '') {

                }
                else {
                    Swal.showValidationMessage(
                        `Tüm alanları doğru ve eksiksiz bir şekilde doldurduğunuzdan emin olunuz!`
                    )
                }
            },
            allowOutsideClick: () => !Swal.isLoading()
        }).then((result) => {
     ");
            WriteLiteral(@"       if (result.isConfirmed) {
                $.ajax({
                    url: '/Maintenance/Add/',
                    type: 'POST',
                    dataType: 'json',
                    data: {
                        'Name': $('#swal-input1').val(),
                        'Period': $('#swal-input2').val(),
                        'MaintenanceComment': $('#swal-input3').val(),
                    },
                    success: function (data) {
                        Swal.fire({
                            position: 'center',
                            icon: 'success',
                            title: 'Başarıyla eklenmiştir!',
                            showConfirmButton: false,
                            timer: 800
                        }).then(() => {
                            $(""#maintenanceDiv"").load(getMaintenances());
                        })
                    },
                    error: function (data) {
                    }
                });
     ");
            WriteLiteral(@"       }
        })
    }
    // ===============================

    function postDataAdd() {
        if (document.forms['form_add'].reportValidity()) {
            document.getElementById(""add"").disabled = true;
            $.ajax({
                url: '");
#nullable restore
#line 399 "C:\Users\mehmetyen\source\repos\RobotMaintenance\RobotMaintenanceMvc\Views\RobotMaintenance\AddRobotMaintenance.cshtml"
                 Write(Url.Action("Add", "RobotMaintenance"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                type: 'POST',
                dataType: 'json',
                data: {
                    'RobotId': $(""#robot"").val(),
                    'MaintenanceId': $(""#maintenance"").val(),
                },
                success: function (data) {
                    if (data == true) {
                        Swal.fire({
                            position: 'center',
                            icon: 'success',
                            title: 'Başarıyla eklenmiştir!',
                            showConfirmButton: false,
                            timer: 800
                        }).then(() => {
                            location.reload();
                        })
                    }
                    else {
                        Swal.fire({
                            position: 'center',
                            icon: 'error',
                            title: 'Bu robota bu bakım daha önce eklenmiştir.',
                            showConfirmBut");
            WriteLiteral(@"ton: false,
                            timer: 1500
                        }).then(() => {
                            location.reload();
                        })
                    }
                },
                error: function (data) {
                }
            });
        }
    }

    function postDataEdit() {
        Swal.fire({
            title: 'Silmek istediğinize emin misiniz?',
            text: ""Silme işlemi geri alınamaz! Bu robota ait bu bakım silinecektir!"",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            cancelButtonText: 'Vazgeç',
            confirmButtonText: 'Evet, sil!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: ""POST"",
                    url: ""/RobotMaintenance/Delete?maintenanceId="" + $(""#maintenance2"").val(),
                    success: function (result) {
  ");
            WriteLiteral(@"                      Swal.fire({
                            position: 'center',
                            icon: 'success',
                            title: 'Başarıyla silinmiştir!',
                            showConfirmButton: false,
                            timer: 800
                        }).then(() => {
                            location.reload();
                        })

                    },
                    error: function (data) {
                    }
                });
            }
        })
    }
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
